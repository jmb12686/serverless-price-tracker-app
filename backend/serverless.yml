service: price-tracker-app

custom:
  tableName: 'watched-items-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["WatchedItemsDynamoDBTable", "Arn" ] }
  environment:
    WATCHED_ITEMS_TABLE: ${self:custom.tableName}

functions:
  web-app-api:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

  watcher-cron:
    description: Trigger job to run thru all items watched, update latest price, and send notifications if threshold met
    handler: watcher.run #execute watcher.js run functions
    events:
      - schedule: rate(1440 minutes)

  notifier:
    description: Consumes DynamoDB table stream and sends notification if latest price is less than threshold
    handler: notifier.handle
    memorySize: 128
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - WatchedItemsDynamoDBTable
              - StreamArn
          batchSize: 1

resources:
  Resources:
    WatchedItemsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: url
            AttributeType: S
        KeySchema:
          -
            AttributeName: url
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        TableName: ${self:custom.tableName}
